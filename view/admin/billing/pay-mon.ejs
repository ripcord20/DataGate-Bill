<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Monitor - Admin Portal</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/boxicons@2.0.7/css/boxicons.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
            min-width: 300px;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <%- include('../../partials/billing-sidebar') %>
            
            <!-- Main content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 main-content">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">
                        <i class="bx bx-monitor"></i> Payment Monitor
                    </h1>
                    <div class="btn-toolbar mb-2 mb-md-0">
                        <button type="button" class="btn btn-sm btn-outline-secondary" onclick="refreshData()">
                            <i class="fas fa-sync-alt"></i> Refresh
                        </button>
                    </div>
                </div>

                <!-- Payment Gateway Status -->
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">Payment Gateway Status</h5>
                            </div>
                            <div class="card-body">
                                <div id="gatewayStatus" class="row">
                                    <!-- Gateway status will be loaded here -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Failed Web Payments -->
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">Failed Web Payments</h5>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-sm">
                                        <thead>
                                            <tr>
                                                <th>Invoice</th>
                                                <th>Customer</th>
                                                <th>Amount</th>
                                                <th>Gateway</th>
                                                <th>Status</th>
                                                <th>Created</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody id="failedPaymentsTable">
                                            <!-- Failed payments will be loaded here -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Payment Transactions -->
                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">Recent Payment Transactions</h5>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-sm">
                                        <thead>
                                            <tr>
                                                <th>Invoice</th>
                                                <th>Customer</th>
                                                <th>Amount</th>
                                                <th>Method</th>
                                                <th>Status</th>
                                                <th>Date</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody id="transactionsTable">
                                            <!-- Transactions will be loaded here -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Manual Payment Modal -->
    <div class="modal fade" id="manualPaymentModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Process Manual Payment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="manualPaymentForm">
                        <div class="mb-3">
                            <label for="manualInvoiceId" class="form-label">Invoice ID</label>
                            <input type="text" class="form-control" id="manualInvoiceId" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="manualPaymentMethod" class="form-label">Payment Method</label>
                            <select class="form-select" id="manualPaymentMethod" required>
                                <option value="">Select payment method</option>
                                <option value="cash">Cash</option>
                                <option value="bank_transfer">Bank Transfer</option>
                                <option value="e_wallet">E-Wallet</option>
                                <option value="qris">QRIS</option>
                                <option value="other">Other</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="manualReference" class="form-label">Reference Number</label>
                            <input type="text" class="form-control" id="manualReference" placeholder="Payment reference number">
                        </div>
                        <div class="mb-3">
                            <label for="manualNotes" class="form-label">Notes</label>
                            <textarea class="form-control" id="manualNotes" rows="3" placeholder="Additional notes"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="processManualPayment()">Process Payment</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Load data when page loads
        document.addEventListener('DOMContentLoaded', function() {
            loadGatewayStatus();
            loadFailedPayments();
            loadTransactions();
        });

        // Load payment gateway status
        async function loadGatewayStatus() {
            try {
                const response = await fetch('/payment/gateway-status');
                const data = await response.json();
                
                if (data.success) {
                    const statusHtml = data.gateways.map(gateway => `
                        <div class="col-md-4 mb-3">
                            <div class="card ${gateway.initialized ? 'border-success' : 'border-danger'}">
                                <div class="card-body text-center">
                                    <h6 class="card-title">${gateway.name}</h6>
                                    <div class="mb-2">
                                        <span class="badge ${gateway.initialized ? 'bg-success' : 'bg-danger'}">
                                            ${gateway.initialized ? 'Active' : 'Inactive'}
                                        </span>
                                    </div>
                                    <small class="text-muted">
                                        ${gateway.initialized ? 'Gateway is ready' : 'Gateway not configured'}
                                    </small>
                                </div>
                            </div>
                        </div>
                    `).join('');
                    
                    document.getElementById('gatewayStatus').innerHTML = statusHtml;
                }
            } catch (error) {
                console.error('Error loading gateway status:', error);
            }
        }

        // Load failed web payments
        async function loadFailedPayments() {
            try {
                const response = await fetch('/payment/failed-payments');
                const data = await response.json();
                
                if (data.success) {
                    const tableHtml = data.payments.map(payment => `
                        <tr>
                            <td>${payment.invoice_id}</td>
                            <td>${payment.customer_name || 'N/A'}</td>
                            <td>Rp ${parseFloat(payment.amount).toLocaleString('id-ID')}</td>
                            <td>${payment.gateway || 'N/A'}</td>
                            <td><span class="badge bg-warning">${payment.status}</span></td>
                            <td>${new Date(payment.created_at).toLocaleDateString('id-ID')}</td>
                            <td>
                                <button class="btn btn-sm btn-primary" onclick="showManualPaymentModal('${payment.invoice_id}')">
                                    Process Manually
                                </button>
                            </td>
                        </tr>
                    `).join('');
                    
                    document.getElementById('failedPaymentsTable').innerHTML = tableHtml || '<tr><td colspan="7" class="text-center">No failed payments found</td></tr>';
                }
            } catch (error) {
                console.error('Error loading failed payments:', error);
            }
        }

        // Load recent transactions
        async function loadTransactions() {
            try {
                const response = await fetch('/payment/recent-transactions');
                const data = await response.json();
                
                if (data.success) {
                    const tableHtml = data.transactions.map(transaction => `
                        <tr>
                            <td>${transaction.invoice_id}</td>
                            <td>${transaction.customer_name || 'N/A'}</td>
                            <td>Rp ${parseFloat(transaction.amount).toLocaleString('id-ID')}</td>
                            <td>${transaction.payment_method}</td>
                            <td><span class="badge bg-success">${transaction.status}</span></td>
                            <td>${new Date(transaction.payment_date).toLocaleDateString('id-ID')}</td>
                            <td>
                                <button class="btn btn-sm btn-info" onclick="viewTransactionDetails('${transaction.id}')">
                                    View Details
                                </button>
                            </td>
                        </tr>
                    `).join('');
                    
                    document.getElementById('transactionsTable').innerHTML = tableHtml || '<tr><td colspan="7" class="text-center">No transactions found</td></tr>';
                }
            } catch (error) {
                console.error('Error loading transactions:', error);
            }
        }

        // Show manual payment modal
        function showManualPaymentModal(invoiceId) {
            document.getElementById('manualInvoiceId').value = invoiceId;
            document.getElementById('manualReference').value = `MANUAL_${Date.now()}`;
            document.getElementById('manualNotes').value = '';
            
            const modal = new bootstrap.Modal(document.getElementById('manualPaymentModal'));
            modal.show();
        }

        // Process manual payment
        async function processManualPayment() {
            const invoiceId = document.getElementById('manualInvoiceId').value;
            const paymentMethod = document.getElementById('manualPaymentMethod').value;
            const reference = document.getElementById('manualReference').value;
            const notes = document.getElementById('manualNotes').value;
            
            try {
                const response = await fetch('/payment/manual-process', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        invoice_id: invoiceId,
                        payment_method: paymentMethod,
                        reference_number: reference,
                        notes: notes
                    })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    // Show success message
                    showAlert('Payment processed successfully!', 'success');
                    
                    // Close modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('manualPaymentModal'));
                    modal.hide();
                    
                    // Refresh data
                    loadFailedPayments();
                    loadTransactions();
                } else {
                    showAlert(data.message || 'Failed to process payment', 'danger');
                }
            } catch (error) {
                console.error('Error processing manual payment:', error);
                showAlert('Error processing payment', 'danger');
            }
        }

        // View transaction details
        function viewTransactionDetails(transactionId) {
            // This could open a modal with detailed transaction information
            alert('Transaction details feature coming soon!');
        }

        // Refresh all data
        function refreshData() {
            loadGatewayStatus();
            loadFailedPayments();
            loadTransactions();
        }

        // Show alert message
        function showAlert(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            const container = document.querySelector('.container-fluid');
            container.insertBefore(alertDiv, container.firstChild);
            
            // Auto-remove after 5 seconds
            setTimeout(() => {
                alertDiv.remove();
            }, 5000);
        }

        // Auto-refresh every 30 seconds
        setInterval(refreshData, 30000);
    </script>
</body>
</html>
